input CreateJobInput {
    name: String
}

input UpdateJobInput {
    id: ID
    isFinished: Boolean
    uploadUrl: String
    imageUrl: String
    scores: [ScoreSuggestionInput]
}

type Job {
    id: ID!
    name: String
    isFinished: Boolean
    uploadUrl: String
    scores: [ScoreSuggestion]
    imageUrl: String
}

type ScoreSuggestion {
    position: Int
    name: String
    score: Int
    isHuman: Boolean
}

input ScoreSuggestionInput {
    position: Int
    name: String
    score: Int
    isHuman: Boolean
}

input CreateScoreInput {
    id: ID!
    position: Int
    name: String
    score: Int
    isHuman: Boolean
    player: String
    date: AWSDateTime
    jobId: ID
}

type Score {
    id: ID!
    position: Int
    name: String
    score: Int
    isHuman: Boolean
    player: String
    date: AWSDateTime
    jobId: ID
}

type Mutation {
    createJob(input: CreateJobInput!): Job
    updateJob(input: UpdateJobInput!): Job

    createScore(input: CreateScoreInput!): Score
}

type Query {
    job(id: ID!): Job
    scores: [Score]
}

type Subscription {
    updatedJob(id:ID!): Job 
    @aws_subscribe(mutations: ["updateJob"])
}
