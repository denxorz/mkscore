input CreateJobInput @aws_api_key @aws_oidc {
    name: String
}

input UpdateJobInput @aws_api_key @aws_oidc {
    id: ID
    isFinished: Boolean
    uploadUrl: String
    imageUrl: String
    scores: [ScoreSuggestionInput]
}

type Job @aws_api_key @aws_oidc {
    id: ID!
    name: String
    isFinished: Boolean
    uploadUrl: String
    scores: [ScoreSuggestion]
    imageUrl: String
}

type ScoreSuggestion @aws_api_key @aws_oidc {
    position: Int
    name: String
    score: Int
    isHuman: Boolean
}

input ScoreSuggestionInput @aws_api_key @aws_oidc {
    position: Int
    name: String
    score: Int
    isHuman: Boolean
}

input CreateScoreInput @aws_api_key @aws_oidc {
    id: ID!
    position: Int
    name: String
    score: Int
    isHuman: Boolean
    player: String
    date: AWSDateTime
    jobId: ID
}

type Score @aws_api_key @aws_oidc {
    id: ID!
    position: Int
    name: String
    score: Int
    isHuman: Boolean
    player: String
    date: AWSDateTime
    jobId: ID
}

type Mutation @aws_api_key @aws_oidc {
    createJob(input: CreateJobInput!): Job
    updateJob(input: UpdateJobInput!): Job

    createScore(input: CreateScoreInput!): Score
}

type Query @aws_api_key @aws_oidc {
    job(id: ID!): Job
    scores: [Score]
}

type Subscription @aws_api_key @aws_oidc {
    updatedJob(id:ID!): Job @aws_subscribe(mutations: ["updateJob"])
    createdScore: Score @aws_subscribe(mutations: ["createScore"])
}
